---
export interface Props {
  data: Array<Array<{ course: string; color: string }>>;
}

const { data } = Astro.props;

const getColorClass = (color: string) => {
  const colorMap: { [key: string]: string } = {
    danger: 'bg-red-600',
    primary: 'bg-blue-600',
    info: 'bg-cyan-600',
    success: 'bg-green-600',
    dark: 'bg-gray-800'
  };
  return colorMap[color] || 'bg-gray-600';
};
---

<div id="timetable-grid" class="overflow-x-auto rounded-2xl shadow-2xl bg-slate-800/50 backdrop-blur-sm border border-slate-600/50">
  <table class="w-full border-collapse">
    {data.map((row, rowIndex) => (
      <tr class={rowIndex === 0 ? 'font-bold bg-slate-700/80' : 'hover:bg-slate-700/30 transition-colors duration-200'}>
        {row.map((cell, cellIndex) => (
          <td
            class={`
              ${getColorClass(cell.color)}
              ${cellIndex === 0 ? 'font-bold text-slate-200' : 'text-slate-100'}
              p-4 text-center border border-slate-500/50 min-w-[140px] text-sm md:text-base
              ${cellIndex === 0 ? 'sticky left-0 z-10 bg-slate-800/90 backdrop-blur-sm' : ''}
              transition-all duration-200 hover:shadow-lg
            `}
          >
            {cell.course}
          </td>
        ))}
      </tr>
    ))}
  </table>
</div>

<style>
  @media print {
    body {
      margin: 0;
      padding: 0;
    }
    #timetable-grid {
      width: 100%;
      overflow: visible;
    }
    table {
      font-size: 11px;
    }
    td {
      padding: 4px !important;
      border: 1px solid #000 !important;
    }
  }
</style>